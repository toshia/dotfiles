#+TITLE: toshi_a's dotfiles

* 使い方
** 初期設定

   最終コミット時点の最新のrubyとrakeに依存する。

   この２つを先にパッケージ管理ツールでインストールする。

   #+BEGIN_SRC sh
git clone https://github.com/toshia/dotfiles.git ~/Project/dotfiles
cd ~/Project/dotfiles
rake
   #+END_SRC

** 設定一覧

   #+BEGIN_SRC sh
rake -T
   #+END_SRC

** 特定のファイルだけインストール

   #+BEGIN_SRC sh
rake $HOME/.config/i3
   #+END_SRC

** 新しいファイルを管理下に置く
   以下のコマンドを実行すると:
   - 対象ファイルをこのリポジトリにコピー
   - 元あった場所にsymlinkを設置
   - rakeタスクとしてそのファイルを追加
   - 必要なファイル群をstage
   - commit

   を行う。
*** $HOME/.*

    =~/.foobar= を管理下に置く場合

    #+BEGIN_SRC sh
rake 'dot[foobar]'
    #+END_SRC

*** $HOME/.config/*

    =~/.config/foobar/= を管理下に置く場合

    #+BEGIN_SRC sh
rake 'config[foobar]'
    #+END_SRC

    この場合、 =~/.config/foobar/= 以下のファイルすべてがcommitされるので余計なものが入らないように気をつける。

    いらんものがあったら =.gitignore= をそのディレクトリに追加して自動コミットされたファイルをいい感じにあれする

** パッケージ同期
   このリポジトリの設定ファイル群を利用するためにインストールする必要があるパッケージのリストを記録しておいて、コマンド一つですべてインストールする機能がある。

*** 新規パッケージマネージャの追加
    =/package/= 以下に、 =(パッケージマネージャ名).yml= というファイルを作り、以下のような内容にする。

    #+BEGIN_SRC yaml
    ---
    install: sudo pacman -S --needed %s
    package: []
    #+END_SRC

    =install:= には、パッケージをインストールするためのコマンドを書く。

    =%s= の部分にはインストールしようとしているパッケージの名前が入る。同時に複数のパッケージが入る場合はこの位置にパッケージぶんの引数が入る。

    このコマンドは、既にOSにインストールされているパッケージを渡された場合、それを再インストールしないように配慮しなければならない。

    =package:= には、このパッケージ管理システムで管理されるパッケージ名のリストを入れる。

*** 記載されているパッケージの同期
    pacmanの場合、以下のようなコマンドを実行する。

    #+BEGIN_SRC sh
    rake pacman:sync
    #+END_SRC

*** パッケージリストにパッケージを自動的に追記する
    以下のコマンドでは、登録されているパッケージマネージャを使って新規パッケージをインストールを試みる。

    #+BEGIN_SRC sh
    rake 'install:pacman[emacs]'
    #+END_SRC

    インストールコマンドが0を返したら =/package/= 以下のyamlファイルに自動的に追記し、コミットしてくれる。失敗したら追記は行わないので安心。

    大括弧の中はスペースで区切って複数のパッケージ名を書くことができる。その場合、生成されるコミットは一つになる。

    既にOSにインストールされているコマンドでも、
